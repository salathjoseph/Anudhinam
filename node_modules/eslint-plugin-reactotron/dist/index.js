"use strict";var utils=require("@typescript-eslint/utils"),createRule=utils.ESLintUtils.RuleCreator(function(){return"reactotron/no-tron-in-production"}),noTronInProduction=createRule({name:"no-tron-in-production",meta:{type:"problem",messages:{noTronInProduction:"Use if (__DEV__) { } around `console.tron.{{ fnName }}` method calls."},docs:{description:"Enforce using `if (__DEV__)` around `console.tron` calls.",recommended:"strict"},schema:[]},defaultOptions:[],create:function(a){var b=a.sourceCode;return{CallExpression:function(c){var d=c.callee;if("MemberExpression"===d.type&&"MemberExpression"===d.object.type&&"Identifier"===d.object.object.type&&"console"===d.object.object.name&&"Identifier"===d.object.property.type&&"tron"===d.object.property.name){var e=null!==b&&void 0!==b&&b.getAncestors?b.getAncestors(c):a.getAncestors(),f=null===e||void 0===e?void 0:e.pop().parent.parent;f&&"IfStatement"===f.type&&f.test&&"Identifier"===f.test.type&&"__DEV__"===f.test.name||a.report({node:d,messageId:"noTronInProduction",data:{fnName:d.property.name}})}}}}}),eslintPluginReactotron={rules:{"no-tron-in-production":noTronInProduction}};module.exports=eslintPluginReactotron;
